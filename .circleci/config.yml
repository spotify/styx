version: 2
jobs:
  test_jdk11_with_coverage:
    resource_class: xlarge
    working_directory: ~/styx
    docker:
      - image: maven:3.6.0-jdk-11
        auth:
          username: spotifyci
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - restore_cache:
          key: v4-deps-{{ checksum "pom.xml" }}-{{ checksum "gcloud-sdk-url.txt" }}
      - run:
          name: Download Maven Dependencies
          environment:
            # Maven heap size
            MAVEN_OPTS: -Xmx256m -Xms256m
          command: mvn -B dependency:go-offline compile test-compile -P disable-static-analysis
      - run:
          name: Install Google Cloud SDK
          command: |
            if [[ ! -d google-cloud-sdk ]]; then
              wget -i gcloud-sdk-url.txt
              tar xzf google-cloud-sdk-*.tar.gz
              google-cloud-sdk/install.sh -q
              google-cloud-sdk/bin/gcloud components install beta cloud-datastore-emulator -q
              google-cloud-sdk/bin/gcloud components install kubectl -q
              google-cloud-sdk/bin/gcloud config set project styx-oss-test
            fi
      - save_cache:
          key: v4-deps-{{ checksum "pom.xml" }}-{{ checksum "gcloud-sdk-url.txt" }}
          paths:
            - ~/.m2
            - ~/google-cloud-sdk
      - run:
          name: "Set up GCP credentials"
          command: |
            echo "$GCLOUD_SERVICE_KEY" > credentials.json
            echo "export GOOGLE_APPLICATION_CREDENTIALS=\"$(realpath credentials.json)\"" >> $BASH_ENV
            google-cloud-sdk/bin/gcloud auth activate-service-account --key-file=credentials.json
      - run:
          name: "Set up GKE cluster credentials"
          command: |
            google-cloud-sdk/bin/kubectl version --client
            google-cloud-sdk/bin/gcloud container clusters get-credentials styx-e2e-test --zone europe-west4-c --project styx-oss-test
      # Run tests without static analysis
      - run:
          name: "Install grpc_health_probe"
          command: |
            mkdir grpc_health
            curl --silent --fail --show-error --location --output grpc_health/grpc_health_probe "https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/v0.3.2/grpc_health_probe-linux-amd64"
            chmod +x grpc_health/grpc_health_probe
            echo 'dc5c8cd7b33ef503f49eb639af6017f33d340884  grpc_health/grpc_health_probe' > .grpc_checksum
            sha1sum -c .grpc_checksum
      - run:
          name: Tests
          environment:
            # Configure datastore emulator heap size
            JAVA: java -Xmx256m
            # Maven heap size
            MAVEN_OPTS: -Xmx256m -Xms256m
          command: |
            google-cloud-sdk/bin/kubectl -n flyte port-forward deployment/flyteadmin 8089:8089 &
            # it takes some time for the portforwarding to be ready
            grpc_health/grpc_health_probe -addr 127.0.0.1:8089  -connect-timeout 10s
            source google-cloud-sdk/path.bash.inc
            mvn -B verify -P disable-static-analysis
      - run:
          name: Aggregate test logs
          when: always
          command: |
            mkdir test-logs
            find . -type f -regextype egrep -regex ".*/target/(surefire|failsafe)-reports/.*txt" -exec cp {} test-logs/ \;
      - store_artifacts:
          path: test-logs/
          destination: test-logs
      - run:
          name: Submit codecov report
          when: always
          command: bash <(curl -s https://codecov.io/bash) -f styx-report/target/site/jacoco-aggregate/jacoco.xml
      - run:
          name: Aggregate test reports
          when: always
          command: |
            mkdir test-reports
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} test-reports/ \;
      - store_test_results:
          path: test-reports/
      - store_artifacts:
          path: styx-report/target/site/jacoco-aggregate/
          destination: jacoco-aggregate
      # Run static analysis after tests
      - run:
          name: Static Analysis
          environment:
            # Maven heap size
            MAVEN_OPTS: -Xmx256m -Xms256m
          when: always
          command: mvn -B clean compile test-compile
workflows:
  version: 2
  build:
    jobs:
      - test_jdk11_with_coverage

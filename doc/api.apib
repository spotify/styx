# Styx API specification

This document is written using [api-blueprint]

## Usage

1. install [dredd]: `npm install -g dredd`
1. package project: `mvn package`
1. run tests: `styx-api-service/bin/api-test.sh`

To generate an html version of this spec, use [aglio]
```
aglio -i doc/api.apib -o api.html --theme-template triple --theme-variables streak
```

[api-blueprint]: https://apiblueprint.org/
[dredd]: https://github.com/apiaryio/dredd
[aglio]: https://github.com/danielgtaylor/aglio

## Authentication

Starting from V3, any request except `GET` requires Google Authentication.

HTTP header `Authorization: Bearer <id_token>` with a valid Google ID token is required
in those requests.

To know more details, please check
[Google documentation](https://developers.google.com/identity/sign-in/web/backend-auth).

# Group Workflows

Resources related to the Workflows registered in Styx.

## Workflows [/{version}/workflows/{component_id}]

+ Parameters
    + component_id: `styx-canary` (string) - Workflow Component

### Get Workflows [GET]

+ Parameters
    + version: `v3` (enum[string]) - API version
        + Members
            + `v3`

+ Response 200 (application/json)

        [{
            "component_id": "styx-canary",
            "workflow_id": "StyxCanary",
            "component_uri": "file:///etc/styx/schedule.yaml",
            "configuration": {
                "id": "StyxCanary",
                "schedule": "hours",
                "offset": null,
                "docker_image": null,
                "docker_args": [
                  "luigi",
                  "--module",
                  "canary_job",
                  "CanaryJob"
                ],
                "docker_termination_logging": false,
                "secret": null,
                "resources": []
              }
        }]

## Workflow [/{version}/workflows/{component_id}/{workflow_id}]

+ Parameters
    + component_id: `styx-canary` (string) - Workflow Component
    + workflow_id: `StyxCanary` (string) - Workflow ID

### Get Workflow [GET]

+ Parameters
    + version: `v3` (enum[string]) - API version
        + Members
            + `v3`

+ Response 200 (application/json)

        {
            "component_id": "styx-canary",
            "workflow_id": "StyxCanary",
            "component_uri": "file:///etc/styx/schedule.yaml",
            "configuration": {
                "id": "StyxCanary",
                "schedule": "hours",
                "offset": null,
                "docker_image": null,
                "docker_args": [
                  "luigi",
                  "--module",
                  "canary_job",
                  "CanaryJob"
                ],
                "docker_termination_logging": false,
                "secret": null,
                "resources": []
              }
        }

### Delete Workflow [DELETE]

Returns 200 OK if the Workflow was found an deleted, 404 Not Found otherwise.

+ Parameters
    + version: `v3` (enum[string]) - API version
        + Members
            + `v3`

+ Response 200
+ Response 404

## Workflows [/{version}/workflows/{component_id}]

Accepts a Workflow definition as a JSON object. Returns 200 OK if the Workflow was registered
or updated. Note that a non-null value is required for docker_image.

+ Parameters
    + version: `v3` (enum[string]) - API version
        + Members
            + `v3`
    + component_id: `styx-canary` (string) - Workflow Component

### Create or update Workflow [POST]

+ Request (application/json)

        {
          "id": "StyxCanary",
          "schedule": "days",
          "offset": null,
          "docker_image": "styx-canary-dummy:dummy",
          "docker_args": [
            "luigi",
            "--module",
            "canary_job",
            "CanaryJob"
          ],
          "docker_termination_logging": false,
          "secret": null,
          "service_account": null,
          "resources": []
        }

+ Response 200 (application/json)

        {
          "component_id": "styx-canary",
          "workflow_id": "StyxCanary",
          "component_uri": "file:///etc/styx/schedule.yaml",
          "configuration": {
            "id": "StyxCanary",
            "schedule": "days",
            "offset": null,
            "docker_image": "styx-canary-dummy:dummy",
            "docker_args": [
              "luigi",
              "--module",
              "canary_job",
              "CanaryJob"
            ],
            "docker_termination_logging": false,
            "secret": null,
            "service_account": null,
            "resources": []
          },
          "__from_api": "V3"
        }

## Workflow Instances [/{version}/workflows/{component_id}/{workflow_id}/instances{?offset,limit,start,stop}]

Query can be done in two different styles: `offset+limit` or `start+stop`.

By using `offset` and `limit`, the oldest workflow instances is specified by `offset`, and
the max number of workflows instances is specified by `limit`.

By using `start` and `stop`, the oldest workflow instance is specified by `start`, and the latest is
specified by `stop`; `start` is required while `stop` is optional.

+ Parameters
    + version: `v3` (enum[string]) - API version
        + Members
            + `v3`
    + component_id: `styx-canary` (string) - Workflow Component
    + workflow_id: `StyxCanary` (string) - Workflow ID
    + offset: `2017-01-01` (string) - the offset parameter
    + limit: `10` (number) - max number of instances
    + start: `2017-01-01` (string) - the start parameter
    + stop: `2017-01-03` (string) - the stop parameter (exclusive)

### Get Workflow Instances [GET]

+ Response 200 (application/json)

        [{
            "workflow_instance": {
              "workflow": {
                "component_id": "styx-canary",
                "id": "StyxCanary"
              },
              "parameter": "2016-07-13T08"
            },
            "triggers": [{
                "trigger_id": "UNKNOWN",
                "timestamp": "2016-07-13T09:00:23.941Z",
                "complete": true,
                "executions": [{
                    "execution_id": "styx-run-qcp3r",
                    "docker_image": "UNKNOWN",
                    "statuses": [
                      {
                        "timestamp": "2016-07-13T09:00:45.882Z",
                        "status": "SUBMITTED"
                      },
                      {
                        "timestamp": "2016-07-13T09:00:49.076Z",
                        "status": "STARTED"
                      },
                      {
                        "timestamp": "2016-07-13T09:00:49.313Z",
                        "status": "SUCCESS"
                      }
                    ]
                }]
            }]
        }]

## Workflow Instance [/{version}/workflows/{component_id}/{workflow_id}/instances/{instance}]

+ Parameters
    + version: `v3` (enum[string]) - API version
        + Members
            + `v3`
    + component_id: `styx-canary` (string) - Workflow Component
    + workflow_id: `StyxCanary` (string) - Workflow ID
    + instance: `2016-07-13T08` (string) - Worfklow Instance parameter

### Get Workflow Instance [GET]

+ Response 200 (application/json)

        {
            "workflow_instance": {
              "workflow": {
                "component_id": "styx-canary",
                "id": "StyxCanary"
              },
              "parameter": "2016-07-13T08"
            },
            "triggers": [{
                "trigger_id": "UNKNOWN",
                "timestamp": "2016-07-13T09:00:23.941Z",
                "complete": true,
                "executions": [{
                    "execution_id": "styx-run-qcp3r",
                    "docker_image": "UNKNOWN",
                    "statuses": [
                      {
                        "timestamp": "2016-07-13T09:00:45.882Z",
                        "status": "SUBMITTED"
                      },
                      {
                        "timestamp": "2016-07-13T09:00:49.076Z",
                        "status": "STARTED"
                      },
                      {
                        "timestamp": "2016-07-13T09:00:49.313Z",
                        "status": "SUCCESS"
                      }
                    ]
                }]
            }]
        }

## Workflow state [/{version}/workflows/{component_id}/{workflow_id}/state]

+ Parameters
    + version: `v3` (enum[string]) - API version
        + Members
            + `v3`
    + component_id: `styx-canary` (string) - Workflow Component
    + workflow_id: `StyxCanary` (string) - Workflow ID

### Get Workflow state [GET]

+ Response 200 (application/json)

        {
            "enabled": "true",
            "docker_image": "styx-canary-dummy:dummy",
            "commit_sha": "f043333085fa87738ac24f04d64fb58ecc845111",
            "next_natural_trigger": "2017-01-01T01:00:00Z",
            "next_natural_offset_trigger": "2017-01-01T02:00:00Z"
        }


### Set Workflow state [PATCH]

+ Request (application/json)

        {
            "enabled": "false",
            "docker_image": "styx-canary-dummy:dummy",
            "commit_sha": "f043333085fa87738ac24f04d64fb58ecc845111",
            "next_natural_trigger": "2017-01-01T01:00:00Z",
            "next_natural_offset_trigger": "2017-01-01T02:00:00Z"
        }

+ Response 200 (application/json)

        {
            "enabled": "false",
            "docker_image": "styx-canary-dummy:dummy",
            "commit_sha": "f043333085fa87738ac24f04d64fb58ecc845111",
            "next_natural_trigger": "2017-01-01T01:00:00Z",
            "next_natural_offset_trigger": "2017-01-01T02:00:00Z"
        }

# Group Resources

Resources related to Styx Resources registered in the scheduler. Styx Resources
can be used to limit the maximum concurrent executions for certain Workflows.

## Resources [/{version}/resources]

+ Parameters
    + version: `v3` (enum[string]) - API version
        + Members
            + `v3`

### Get Resources [GET]

+ Response 200 (application/json)

        {
            "resources": [{
                "concurrency": 20,
                "id": "styx-canary-resource"
            }]
        }

### Create Resource [POST]

+ Request (application/json)

        {
            "concurrency": "20",
            "id": "styx-canary-resource"
        }

+ Response 200 (application/json)

        {
            "concurrency": 20,
            "id": "styx-canary-resource"
        }

## Resource [/{version}/resources/{resource}]

+ Parameters
    + version: `v3` (enum[string]) - API version
        + Members
            + `v3`
    + resource: `styx-canary-resource` (string) - Resource ID

### Get Resource [GET]

+ Response 200 (application/json)

        {
            "resources": [{
                "concurrency": 20,
                "id": "styx-canary-resource"
            }]
        }

### Delete Resource [DELETE]

+ Response 204

### Modify Resource [PUT]

+ Request (application/json)

        {
            "concurrency": "30",
            "id": "styx-canary-resource"
        }

+ Response 200 (application/json)

        {
            "concurrency": 30,
            "id": "styx-canary-resource"
        }

# Group Backfills

Resources related to the Backfills in Styx. This group allows to operate on
Backfill entities registered in Styx and check detailed status of each single
Workflow Instance belonging to a Backfill entity.

## Backfills [/{version}/backfills{?component,workflow,status,showAll}]

+ Parameters
    + version: `v3` (enum[string]) - API version
        + Members
            + `v3`

### Get Backfills [GET]

+ Parameters
    + component: `styx-canary` (optional, string) - Workflow Component to filter with
    + workflow: `StyxCanary` (optional, string) - Workflow ID to filter with
    + status: `true` (optional, boolean) - If to return the status list per backfill
      + Default: false
    + showAll: `true` (optional, boolean) - If to return also halted backfills and backfills whose instances have been all triggered
      + Default: false

+ Response 200 (application/json)

        {
            "backfills": [{
                "backfill": {
                    "all_triggered": true,
                    "concurrency": 10,
                    "end": "2017-01-01T01:00:00Z",
                    "halted": false,
                    "id": "backfill-1489054446085-53384",
                    "next_trigger": "2017-01-01T01:00:00Z",
                    "schedule": "hours",
                    "start": "2017-01-01T00:00:00Z",
                    "workflow_id": {
                        "component_id": "styx-canary",
                        "id": "StyxCanary"
                    }
                },
                "statuses": {
                    "active_states": [{
                        "state": "DONE",
                        "workflow_instance": {
                            "parameter": "2017-01-01T00",
                            "workflow_id": {
                                "component_id": "styx-canary",
                                "id": "StyxCanary"
                            }
                        },
                        "state_data": {
                            "consecutive_failures": 0,
                            "execution_description": {
                                "commit_sha": "f043333085fa87738ac24f04d64fb58ecc845111",
                                "docker_args": [
                                    "luigi",
                                    "--module",
                                    "canary_job",
                                    "CanaryJob"
                                ],
                                "docker_image": "styx-canary-dummy:dummy",
                                "docker_termination_logging": false,
                                "secret": null
                            },
                            "execution_id": "styx-run-6b1962c6-23ba-4245-a13b-ec3baa4b2133",
                            "last_exit": 0,
                            "messages": [
                                {
                                    "level": "INFO",
                                    "line": "Exit code: 0"
                                }
                            ],
                            "retry_cost": 0.0,
                            "retry_delay_millis": null,
                            "tries": 1,
                            "trigger": {
                                "@type": "backfill",
                                "trigger_id": "backfill-1489054446085-53384"
                            },
                            "trigger_id": "backfill-1489054446085-53384"
                        }
                    }]
                }
            }]
        }

### Create Backfill [POST]

+ Request (application/json)

        {
            "start": "2017-01-01T00:00:00Z",
            "end": "2017-01-02T00:00:00Z",
            "component": "styx-canary",
            "workflow": "StyxCanary",
            "concurrency": "10",
        }

+ Response 200 (application/json)

        {
            "all_triggered": false,
            "concurrency": 10,
            "end": "2017-02-00T00:00:00Z",
            "halted": false,
            "id": "backfill-1489054446085-52684",
            "next_trigger": "2017-01-01T00:00:00Z",
            "schedule": "hours",
            "start": "2017-01-01T00:00:00Z",
            "workflow_id": {
                "component_id": "styx-canary",
                "id": "StyxCanary"
            }
        }

## Backfill [/{version}/backfills/{backfill_id}]

+ Parameters
    + version: `v3` (enum[string]) - API version
        + Members
            + `v3`
    + backfill_id: `backfill-1489054446085-52684` (string) - Backfill ID

### Modify Backfill [PUT]

+ Request (application/json)

        {
            "all_triggered": false,
            "concurrency": 20,
            "end": "2017-02-00T00:00:00Z",
            "halted": false,
            "id": "backfill-1489054446085-52684",
            "next_trigger": "2017-01-01T00:00:00Z",
            "schedule": "hours",
            "start": "2017-01-01T00:00:00Z",
            "workflow_id": {
                "component_id": "styx-canary",
                "id": "StyxCanary"
            }
        }

+ Response 200 (application/json)

        {
            "all_triggered": false,
            "concurrency": 20,
            "end": "2017-02-00T00:00:00Z",
            "halted": false,
            "id": "backfill-1489054446085-52684",
            "next_trigger": "2017-01-01T00:00:00Z",
            "schedule": "hours",
            "start": "2017-01-01T00:00:00Z",
            "workflow_id": {
                "component_id": "styx-canary",
                "id": "StyxCanary"
            }
        }

### Delete Backfill [DELETE]

+ Response 200

# Group Status

Resources related to inspect detailed status of Workflow Instances.

## Active States [/{version}/status/activeStates]

+ Parameters
    + version: `v3` (enum[string]) - API version
        + Members
            + `v3`

### Get Active States [GET]

+ Response 200 (application/json)

        {
            "active_states": [{
                "state": "RUNNING",
                "workflow_instance": {
                    "parameter": "2017-01-01T01",
                    "workflow_id": {
                        "component_id": "styx-canary",
                        "id": "StyxCanary"
                    }
                },
                "state_data": {
                    "consecutive_failures": 0,
                    "execution_description": {
                        "commit_sha": "f043333085fa87738ac24f04d64fb58ecc845111",
                        "docker_args": [
                          "luigi",
                          "--module",
                          "canary_job",
                          "CanaryJob"
                        ],
                        "docker_image": "styx-canary-dummy:dummy",
                        "docker_termination_logging": false,
                        "secret": null
                    },
                    "execution_id": "styx-run-6b1962c6-23ba-4245-a13b-ec3baa4b21d5",
                    "last_exit": 20,
                    "messages": [
                        {
                            "level": "WARNING",
                            "line": "Exit code: 20"
                        }
                    ],
                    "retry_cost": 0.2,
                    "retry_delay_millis": 600000,
                    "tries": 2,
                    "trigger": {
                        "@type": "natural"
                    },
                    "trigger_id": "natural-trigger"
                }
            }]
        }

## Events [/{version}/status/events/{component_id}/{workflow_id}/{instance}]

+ Parameters
    + version: `v3` (enum[string]) - API version
        + Members
            + `v3`
    + component_id: `styx-canary` (string) - Workflow Component
    + workflow_id: `StyxCanary` (string) - Workflow ID
    + instance: `2017-01-01T01` (string) - Worfklow Instance parameter

### Get Workflow Instance events [GET]

+ Response 200 (application/json)

        {
            "events": [{
                "event": {
                    "@type": "triggerExecution",
                    "trigger": {
                        "@type": "natural"
                    },
                    "workflow_instance": "styx-canary/StyxCanary/2017-01-01T01"
                },
                "timestamp": 1483228800000
            },
            {
                "event": {
                    "@type": "dequeue",
                    "workflow_instance": "styx-canary/StyxCanary/2017-01-01T01"
                },
                "timestamp": 1483228800005
            }]
        }

# Group Scheduler

Resources related to operations that act on the current state of the scheduler.

## Events [/{version}/scheduler/events]

+ Parameters
    + version: `v3` (enum[string]) - API version
        + Members
            + `v3`

### Inject Event [POST]

+ Request (application/json)

        {
            "@type": "dequeue",
            "workflow_instance": "styx-canary/StyxCanary/2017-01-01T01"
        }

+ Response 200 (application/json)

        {
            "@type": "dequeue",
            "workflow_instance": "styx-canary/StyxCanary/2017-01-01T01"
        }

## Trigger [/{version}/scheduler/trigger]

+ Parameters
    + version: `v3` (enum[string]) - API version
        + Members
            + `v3`

### Trigger Workflow Instance [POST]

+ Request (application/json)

        {
            "parameter": "2017-01-01T01",
            "workflow_id": {
                "component_id": "styx-canary",
                "id": "StyxCanary"
            }
        }

+ Response 200 (application/json)

        {
            "parameter": "2017-01-01T01",
            "workflow_id": {
                "component_id": "styx-canary",
                "id": "StyxCanary"
            }
        }

# Group Styx Config

Resources related to global configurations for Styx.

## Global Enabled [/{version}/config{?enabled}]

+ Parameters
    + version: `v3` (enum[string]) - API version
        + Members
            + `v3`

### Get Global Enabled [GET]

+ Response 200 (application/json)

        {
            "enabled": "true"
        }

### Set Global Enabled [POST]

+ Parameters
    + enabled: `true` (required, boolean) - Global enabled value

+ Response 200 (application/json)

        {
            "enabled": "true"
        }
